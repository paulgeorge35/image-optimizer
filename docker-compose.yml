version: "3.8"

services:
  # Image Optimizer Service
  image-optimizer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: image-optimizer
    ports:
      - "3101:3000"
    environment:
      - PORT=3000
      - REDIS_URL=$REDIS_URL
      - R2_ACCOUNT_ID=$R2_ACCOUNT_ID
      - R2_ACCESS_KEY_ID=$R2_ACCESS_KEY_ID
      - R2_SECRET_ACCESS_KEY=$R2_SECRET_ACCESS_KEY
      - R2_BUCKET_NAME=$R2_BUCKET_NAME
      - R2_REGION=$R2_REGION
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - image-optimizer-network
    volumes:
      # Mount logs directory to persist logs
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:3000/health"]
      interval: 5s
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: image-optimizer-redis
    volumes:
      - image_optimizer_redis_data:/data
    restart: unless-stopped
    networks:
      - image-optimizer-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  image_optimizer_redis_data:
    driver: local

networks:
  image-optimizer-network:
    driver: bridge
